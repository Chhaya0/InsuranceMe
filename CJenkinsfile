pipeline{
agent any
tools{
  maven 'M2_HOME'
   }
stages{
  stage('Git Checkout'){
    steps{
      echo 'This step  is for cloning git repo to have project in jenkins'
      git branch: 'main', url: 'https://github.com/Chhaya0/InsuranceMe.git'
    }
}
 stage ('Create a Package'){
    steps{
      echo 'This step will create a package using maven'
      sh 'mvn package'
    }
 }
stage ('Publish the reports HTML')
{
  steps{
      publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/Insure_project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
  }
}
stage ('create a Docker image from the package Insure-Me.jar file'){
steps{
sh 'docker build -t chhaya949/insure-me-app:1.0 .'
}
}
stage ('Login To DockerHub for pushing images so first login')
{
  steps{
    withCredentials([usernamePassword(credentialsId: 'dockerlogin', passwordVariable: 'dockerpass', usernameVariable: 'dockeruser')]) {
    sh 'docker login -u ${dockeruser} -p ${dockerpass}'
}
  }
}
stage ('Push the Docker image now')
{
  steps{
    sh 'docker push chhaya949/insure-me-app:1.0'
  }
}
 stage('Ansbile config and Deployment') {
      steps {
      ansiblePlaybook credentialsId: 'ansible-sshlatest', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'ansible.yml', vaultTmpPath: ''ansiblePlaybook credentialsId: 'ansible-sshlatest', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'ansible.yml', vaultTmpPath: ''
}
            }
}
}
